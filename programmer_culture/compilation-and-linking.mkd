### 编译和链接

IDE开发环境甚至是命令行都将编译和链接过程进行合并，直接在后台运行，使得上层程序员不知道在由源代码生成可执行程序的过程中究竟发生了什么事情。比如下面的命令：

`gcc hello.c`

就包含了预处理、编译、汇编和链接四个过程，而从表面上仅仅看到了由源代码生成可执行文件的过程。整个过程如下图：
![源代码可执行文件的整个流程](figure/source-to-exe-process.png)

#### 预处理
预处理过程遵守下面的规则：

1. 去掉源代码中所有的#define，将宏在调用处展开；
2. 去掉源代码中所有的#include，将需要包含的文件包含在该命令处，这是一个递归的过程，如果被包含的文件中包含了#include命令，仍然需要展开；
3. 去掉源代码中的注释，包括“//”和“/\* \*/”；
4. 添加行号和文件名标示符，以便在调试时使用，另外这些信息也可以在编译器发出警告信息以及报错时用到；
5. 处理预编译指令，#if，#elif，#else和#endif；
6. 保留所有的#pragma指令，这些指令指示编译器的行为；

#### 编译
编译过程包括词法分析、语法分析、语义分析以及优化后生成相应的汇编代码。可以使用下面的命令对预处理后的源代码执行编译的过程，生成汇编代码：

`gcc -S hello.i -o hello.s`

或者直接由源代码生成汇编代码：

`gcc -S hello.c -o hello.s`

gcc是一系列后台程序的封装，这些后台程序包括预处理程序、编译程序、汇编程序以及链接程序。如gcc hello.c这个命令，就会一次调用四个程序。